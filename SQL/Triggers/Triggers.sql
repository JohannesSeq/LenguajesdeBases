--- Trigger que evita que se inserten empleados cuyo rol no sea Empleado o gerente

CREATE OR REPLACE TRIGGER TRG_VALIDAR_ROL_EMPLEADO
BEFORE INSERT ON EMPLEADOS
FOR EACH ROW
DECLARE
    V_ROL VARCHAR(50);
BEGIN
    SELECT ID_ROL_PERSONA
    INTO V_ROL
    FROM PERSONAS
    WHERE CEDULA = :NEW.CEDULA;

    IF V_ROL IN ('Cliente') THEN
        RAISE_APPLICATION_ERROR(-20001, 'Solo se permiten personas con rol Empleado o Gerente.');
    END IF;
END;
/

CREATE OR REPLACE TRIGGER TRG_PREVENIR_ELIMINACION_EMPLEADO
BEFORE DELETE ON EMPLEADOS
FOR EACH ROW
WHEN (OLD.SALARIO > 5000)
BEGIN
    RAISE_APPLICATION_ERROR(-20002, 'No se puede eliminar empleados con salario mayor a 5000.');
END;
/

CREATE OR REPLACE TRIGGER TRG_PREVENIR_ELIMINACION_GERENTES
BEFORE DELETE ON PERSONAS
FOR EACH ROW
WHEN (OLD.ID_ROL_PERSONA = 'Gerente')
BEGIN
    RAISE_APPLICATION_ERROR(-20003, 'No se pueden eliminar gerentes');
END;
/

CREATE OR REPLACE TRIGGER TRG_PREVENIR_BORRADO_PLATILLO
BEFORE DELETE ON PLATILLOS
FOR EACH ROW
WHEN (OLD.NOMBRE_PLATILLO = 'Arroz con camarones')
BEGIN
    RAISE_APPLICATION_ERROR(-20004, 'El restaurante debe de servir al menos un plato con mariscos');
END;
/

CREATE OR REPLACE TRIGGER TRG_PREVENIR_BORRADO_PROVINCIA
BEFORE DELETE ON PROVINCIA
FOR EACH ROW
WHEN (OLD.NOMBRE_PROVINCIA = 'Puntarenas')
BEGIN
    RAISE_APPLICATION_ERROR(-20005, 'No se puede eliminar la provincia de origen del restaurante.');
END;
/

