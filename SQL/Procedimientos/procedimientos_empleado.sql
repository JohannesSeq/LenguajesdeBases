CREATE OR REPLACE PACKAGE PKG_EMPLEADOS AS
    PROCEDURE AGREGAR_EMPLEADO(
        P_ID_DEPARTAMENTO NUMBER,
        P_ID_PUESTO NUMBER,
        P_SALARIO NUMBER,
        P_CEDULA NUMBER,
        P_COMENTARIO VARCHAR
    );

    PROCEDURE MODIFICAR_EMPLEADO(
        P_ID_EMPLEADO NUMBER,
        P_ID_DEPARTAMENTO NUMBER,
        P_ID_PUESTO NUMBER,
        P_SALARIO NUMBER
    );

    PROCEDURE ELIMINAR_EMPLEADO(
        P_ID_EMPLEADO NUMBER,
        P_COMENTARIO VARCHAR
    );

    PROCEDURE ENVIO_TOTAL_EMPLEADOS(P_CURSOR OUT SYS_REFCURSOR);
    PROCEDURE ENVIO_EMPLEADO_INDIVIDUAL(P_ID_EMPLEADO NUMBER, P_CURSOR OUT SYS_REFCURSOR);
END PKG_EMPLEADOS;
/


CREATE OR REPLACE PACKAGE BODY PKG_EMPLEADOS AS

    PROCEDURE AGREGAR_EMPLEADO(
        P_ID_DEPARTAMENTO NUMBER,
        P_ID_PUESTO NUMBER,
        P_SALARIO NUMBER,
        P_CEDULA NUMBER,
        P_COMENTARIO VARCHAR
    ) AS
        V_ID_EMPLEADO NUMBER;
        V_ESTADO_ID VARCHAR(250);
    BEGIN
        INSERT INTO EMPLEADOS(ID_DEPARTAMENTO, ID_PUESTO, SALARIO, CEDULA)
        VALUES (P_ID_DEPARTAMENTO, P_ID_PUESTO, P_SALARIO, P_CEDULA)
        RETURNING ID_EMPLEADO INTO V_ID_EMPLEADO;

        V_ESTADO_ID := CREAR_ENTRADA_ESTADO(TO_CHAR(V_ID_EMPLEADO), 'EMPLEADOS', P_COMENTARIO);

        UPDATE EMPLEADOS
        SET ID_ESTADO = V_ESTADO_ID
        WHERE ID_EMPLEADO = V_ID_EMPLEADO;

        COMMIT;
    END;

    PROCEDURE MODIFICAR_EMPLEADO(
        P_ID_EMPLEADO NUMBER,
        P_ID_DEPARTAMENTO NUMBER,
        P_ID_PUESTO NUMBER,
        P_SALARIO NUMBER
    ) AS
    BEGIN
        UPDATE EMPLEADOS
        SET ID_DEPARTAMENTO = P_ID_DEPARTAMENTO,
            ID_PUESTO = P_ID_PUESTO,
            SALARIO = P_SALARIO
        WHERE ID_EMPLEADO = P_ID_EMPLEADO;

        COMMIT;
    END;

    PROCEDURE ELIMINAR_EMPLEADO(
        P_ID_EMPLEADO NUMBER,
        P_COMENTARIO VARCHAR
    ) AS
        V_ESTADO_ID VARCHAR(250);
    BEGIN
        V_ESTADO_ID := CREAR_ENTRADA_ESTADO(TO_CHAR(P_ID_EMPLEADO), 'EMPLEADOS', P_COMENTARIO);

        UPDATE EMPLEADOS
        SET ID_ESTADO = V_ESTADO_ID
        WHERE ID_EMPLEADO = P_ID_EMPLEADO;

        COMMIT;
    END;

    PROCEDURE ENVIO_TOTAL_EMPLEADOS(P_CURSOR OUT SYS_REFCURSOR) AS
    BEGIN
        OPEN P_CURSOR FOR SELECT * FROM VISTA_EMPLEADOS_COMPLETA;
    END;

    PROCEDURE ENVIO_EMPLEADO_INDIVIDUAL(P_ID_EMPLEADO NUMBER, P_CURSOR OUT SYS_REFCURSOR) AS
    BEGIN
        OPEN P_CURSOR FOR
        SELECT * FROM VISTA_EMPLEADOS_COMPLETA WHERE ID_EMPLEADO = P_ID_EMPLEADO;
    END;

END PKG_EMPLEADOS;
/


/*
------Procedimiento almacenado para insertar un nuevo empleado--------------------

CREATE OR REPLACE PROCEDURE CREAR_EMPLEADO(

    P_ID_EMPLEADO NUMBER,
    P_ID_DEPARTAMENTO NUMBER,
    P_ID_PUESTO NUMBER,
    P_SALARIO NUMBER,
    P_CEDULA NUMBER,
    P_COMENTARIO VARCHAR
)
AS

    V_ESTADO_ID VARCHAR(250); --Variable para almacenar el estado del empleado

BEGIN

    --Insertamos el empleado en la tabla
    INSERT INTO EMPLEADOS(ID_EMPLEADO,ID_DEPARTAMENTO, ID_PUESTO, SALARIO, CEDULA)
    VALUES (P_ID_EMPLEADO,P_ID_DEPARTAMENTO, P_ID_PUESTO, P_SALARIO, P_CEDULA);

    --Creamos el estado del rol llamando a la funcion delegada
    V_ESTADO_ID := CREAR_ENTRADA_ESTADO(TO_CHAR(P_ID_EMPLEADO),'EMPLEADOS', P_COMENTARIO);

    UPDATE EMPLEADOS
    SET ID_ESTADO = V_ESTADO_ID
    WHERE ID_EMPLEADO = P_ID_EMPLEADO;
    COMMIT;
END;
/
*/

