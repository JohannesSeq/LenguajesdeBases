CREATE OR REPLACE PACKAGE PKG_DEPARTAMENTOS AS
    PROCEDURE AGREGAR_DEPARTAMENTO(
        P_NOMBRE_DEPARTAMENTO VARCHAR,
        P_DESCRIPCION VARCHAR
    );

    PROCEDURE MODIFICAR_DEPARTAMENTO(
        P_ID_DEPARTAMENTO NUMBER,
        P_NUEVO_NOMBRE VARCHAR,
        P_NUEVA_DESCRIPCION VARCHAR
    );

    PROCEDURE ELIMINAR_DEPARTAMENTO(P_ID_DEPARTAMENTO NUMBER);

    PROCEDURE ENVIO_TOTAL_DEPARTAMENTOS(P_CURSOR OUT SYS_REFCURSOR);
    PROCEDURE ENVIO_DEPARTAMENTO_INDIVIDUAL(P_ID_DEPARTAMENTO NUMBER, P_CURSOR OUT SYS_REFCURSOR);
END PKG_DEPARTAMENTOS;
/

CREATE OR REPLACE PACKAGE BODY PKG_DEPARTAMENTOS AS

    PROCEDURE AGREGAR_DEPARTAMENTO(
        P_NOMBRE_DEPARTAMENTO VARCHAR,
        P_DESCRIPCION VARCHAR
    ) AS
        V_ID_DEPARTAMENTO NUMBER;
        V_ESTADO_ID VARCHAR(250);
    BEGIN
        INSERT INTO DEPARTAMENTOS(NOMBRE_DEPARTAMENTO, DESCRIPCION)
        VALUES (P_NOMBRE_DEPARTAMENTO, P_DESCRIPCION)
        RETURNING ID_DEPARTAMENTO INTO V_ID_DEPARTAMENTO;

        V_ESTADO_ID := CREAR_ENTRADA_ESTADO(TO_CHAR(V_ID_DEPARTAMENTO), 'DEPARTAMENTOS', 'Creación de departamento');

        UPDATE DEPARTAMENTOS
        SET ID_ESTADO = V_ESTADO_ID
        WHERE ID_DEPARTAMENTO = V_ID_DEPARTAMENTO;

        COMMIT;
    END;

    PROCEDURE MODIFICAR_DEPARTAMENTO(
        P_ID_DEPARTAMENTO NUMBER,
        P_NUEVO_NOMBRE VARCHAR,
        P_NUEVA_DESCRIPCION VARCHAR
    ) AS
    BEGIN
        UPDATE DEPARTAMENTOS
        SET NOMBRE_DEPARTAMENTO = P_NUEVO_NOMBRE,
            DESCRIPCION = P_NUEVA_DESCRIPCION
        WHERE ID_DEPARTAMENTO = P_ID_DEPARTAMENTO;

        COMMIT;
    END;

    PROCEDURE ELIMINAR_DEPARTAMENTO(P_ID_DEPARTAMENTO NUMBER) AS
        V_ESTADO_ID VARCHAR(250);
    BEGIN
        V_ESTADO_ID := CREAR_ENTRADA_ESTADO(TO_CHAR(P_ID_DEPARTAMENTO), 'DEPARTAMENTOS', 'Eliminación de departamento');

        UPDATE DEPARTAMENTOS
        SET ID_ESTADO = V_ESTADO_ID
        WHERE ID_DEPARTAMENTO = P_ID_DEPARTAMENTO;

        COMMIT;
    END;

    PROCEDURE ENVIO_TOTAL_DEPARTAMENTOS(P_CURSOR OUT SYS_REFCURSOR) AS
    BEGIN
        OPEN P_CURSOR FOR SELECT * FROM VISTA_DEPARTAMENTOS;
    END;

    PROCEDURE ENVIO_DEPARTAMENTO_INDIVIDUAL(P_ID_DEPARTAMENTO NUMBER, P_CURSOR OUT SYS_REFCURSOR) AS
    BEGIN
        OPEN P_CURSOR FOR
        SELECT * FROM VISTA_DEPARTAMENTOS WHERE ID_DEPARTAMENTO = P_ID_DEPARTAMENTO;
    END;

END PKG_DEPARTAMENTOS;
/

/* Antigua logica de DEPARTAMENTOS
------Procedimiento almacenado para insertar un nuevo departamento para un empleado----------



CREATE OR REPLACE PROCEDURE CREAR_DEPARTAMENTO(
    P_NOMBRE_DEPARTAMENTO VARCHAR,
    P_DESCRIPCION VARCHAR,
    P_COMENTARIO VARCHAR
)
AS
    V_ESTADO_ID VARCHAR(250); --Variable para almacenar la id del estado del distrito
    V_ID_DEPARTAMENTO NUMBER; --Variable para almacenar la id del distrito

BEGIN
    --Insercion del distrito
    INSERT INTO DEPARTAMENTOS(NOMBRE_DEPARTAMENTO, DESCRIPCION)
     VALUES (P_NOMBRE_DEPARTAMENTO, P_DESCRIPCION);
    
    --Obtenemos el id del distrito por medio del nombre
    SELECT ID_DEPARTAMENTO
        INTO V_ID_DEPARTAMENTO
        FROM DEPARTAMENTOS
        WHERE NOMBRE_DEPARTAMENTO = P_NOMBRE_DEPARTAMENTO;
    
    --Creamos el estado del rol llamando a la funcion delegada
    V_ESTADO_ID := CREAR_ENTRADA_ESTADO(TO_CHAR(V_ID_DEPARTAMENTO),'DEPARTAMENTOS', P_COMENTARIO);
    
    --Actualizamos el id del estado
    UPDATE DEPARTAMENTOS
    SET ID_ESTADO = V_ESTADO_ID
    WHERE ID_DEPARTAMENTO = V_ID_DEPARTAMENTO;
    
    COMMIT;

END;
/

*/